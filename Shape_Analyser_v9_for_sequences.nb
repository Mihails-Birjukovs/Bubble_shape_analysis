(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     79620,       1450]
NotebookOptionsPosition[     78337,       1422]
NotebookOutlinePosition[     78761,       1439]
CellTagsIndexPosition[     78718,       1436]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"SetOptions", "[", 
  RowBox[{
   RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
   RowBox[{"CellContext", "\[Rule]", "Notebook"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"$Context", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"packageDirectory", ":=", 
  "\"\<C:\\\\Users\\\\User\\\\Documents\\\\Zvejnieks\\\\Bubble_Shape_Analysis\
\\\\Bubble Shape Analysis\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Import", "[", 
    RowBox[{"packageDirectory", "<>", "\"\<\\\\Shape Analyser.m\>\""}], "]"}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"launchNukes", "[", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", "\n", 
    RowBox[{"Histogram", ",", "\n", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ImageSize", "->", "Large"}], ",", 
       RowBox[{"ChartElementFunction", "->", "\"\<GlassRectangle\>\""}], ",", 
       RowBox[{"ColorFunction", "->", "\"\<GrayTones\>\""}], ",", 
       RowBox[{"LabelingFunction", "->", "Above"}], ",", 
       RowBox[{"AspectRatio", "->", "Automatic"}]}], "}"}]}], "\n", "]"}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", "\n", 
    RowBox[{"ListLinePlot", ",", "\n", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ImageSize", "->", "Large"}], ",", 
       RowBox[{"AspectRatio", "->", "Automatic"}]}], "}"}]}], "\n", "]"}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", "\n", 
    RowBox[{"ListPlot", ",", "\n", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ImageSize", "->", "Large"}], ",", 
       RowBox[{"AspectRatio", "->", "Automatic"}]}], "}"}]}], "\n", "]"}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", "\n", 
   RowBox[{"SmoothDensityHistogram", ",", "\n", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ImageSize", "->", "Large"}], ",", 
      RowBox[{"AspectRatio", "->", "Automatic"}]}], "}"}]}], "\n", "]"}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.837760488387627*^9},
 CellLabel->
  "(Debug) In[11]:=",ExpressionUUID->"7c516287-0fd3-45e9-9ec6-df31805335ea"],

Cell[BoxData["\<\"Notebook$$27$760474`\"\>"], "Output",
 CellChangeTimes->{
  3.8376814402980433`*^9, 3.8376815059795337`*^9, 3.8376815542541423`*^9, 
   3.8376885911485324`*^9, {3.8377265177424717`*^9, 3.837726524645252*^9}, {
   3.837760631633142*^9, 3.8377606318735037`*^9}},
 CellLabel->
  "(Debug) Out[13]=",ExpressionUUID->"0b5b9cd3-2c7e-4cd7-aba3-277afe6c9f48"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"testImage", "=", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt172OrFdahuEtAiBCnAJnQUpIOogDmBFmRGIkDxIi5cQbe9vb7p+vqr+f
tdZtqq4raKmlqqVXT3Kr/uFP//mHf/+rL1++/OVvf/zzhz/+9z/98MMf/+df
/v7Hf/71+7/8x5+//+7f/vn7//ruz9/98I9/+uljf/c3X778719/AQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
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
      "], {{0, 1806.}, {1666., 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{1666., 1806.},
    PlotRange->{{0, 1666.}, {0, 1806.}}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.837681483609702*^9, {3.8376831896212225`*^9, 3.8376832120979185`*^9}},
 CellLabel->
  "(Debug) In[32]:=",ExpressionUUID->"042b13bb-9ed0-4d8e-a53d-3cf7445b4854"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"fraq", " ", "=", " ", "0.8"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"relevanceFunction", " ", "=", " ", "kc2"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"splineOrder", "=", "10"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"samplingPoints", "=", "3000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"windowFactor", "=", "0.005"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tolerance", "=", "0.02"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"camberSplineOrder", " ", "=", " ", "5"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"camberSamplingPoints", "=", "100"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"analyseShape", "[", "image_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
       "steppedBoundaryPoints", ",", "bubbleRegion", ",", 
        "\[IndentingNewLine]", "boundaryPoints", ",", "boundarySpline", ",", 
        "\[IndentingNewLine]", "upsampledBoundary", ",", "curvatureProfile", 
        ",", "\[IndentingNewLine]", "downsampledBoundary", ",", 
        "voronoiInternalPoints", ",", " ", "\[IndentingNewLine]", 
        "camberAssist", ",", " ", "voronoiSpanningTree", ",", 
        "\[IndentingNewLine]", "dendriteEndpoints", ",", " ", "camberMain", 
        ",", "\[IndentingNewLine]", "extremaLocations", ",", " ", 
        "finalCamberLine", ",", "\[IndentingNewLine]", "chord", ",", 
        "downsampledCamberLine"}], "\[IndentingNewLine]", "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"steppedBoundaryPoints", "=", 
        RowBox[{"getPixelCoordinates", "@", "image"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"bubbleRegion", "=", 
        RowBox[{
        "constructBubbleRegion", "[", "steppedBoundaryPoints", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"boundaryPoints", "=", 
        RowBox[{"curveEvolution", "[", 
         RowBox[{
         "steppedBoundaryPoints", ",", "fraq", ",", " ", 
          "relevanceFunction"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"boundarySpline", "=", 
        RowBox[{"buildBoundarySpline", "[", 
         RowBox[{"boundaryPoints", ",", "splineOrder"}], "]"}]}], ";", 
       RowBox[{"upsampledBoundary", "=", 
        RowBox[{"uniformlySampleSpline", "[", 
         RowBox[{"boundarySpline", ",", "samplingPoints"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"curvatureProfile", "=", 
        RowBox[{"getCurvatureProfile", "[", 
         RowBox[{"upsampledBoundary", ",", " ", "windowFactor"}], "]"}]}], 
       ";", 
       RowBox[{"downsampledBoundary", "=", 
        RowBox[{"downsampleBoundary", "[", 
         RowBox[{
         "upsampledBoundary", ",", "boundarySpline", ",", "tolerance", ",", 
          "windowFactor"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"voronoiInternalPoints", "=", 
        RowBox[{"getVoronoiInteriorNodes", "[", 
         RowBox[{"downsampledBoundary", ",", " ", "bubbleRegion"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"camberAssist", "=", 
        RowBox[{"getAssistingSkeleton", "[", "image", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"voronoiSpanningTree", "=", 
        RowBox[{
        "getVoronoiSpanningTree", "[", "voronoiInternalPoints", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"dendriteEndpoints", "=", 
        RowBox[{"getVoronoiDendrites", "[", "voronoiSpanningTree", "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"camberMain", "=", 
        RowBox[{"constructCamberLine", "[", 
         RowBox[{"voronoiInternalPoints", ",", "voronoiSpanningTree"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"extremaLocations", "=", 
        RowBox[{"mapExtremaToBoundary", "[", 
         RowBox[{"boundarySpline", ",", "curvatureProfile"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"finalCamberLine", "=", 
        RowBox[{"finishCamberLine", "[", 
         RowBox[{"camberMain", ",", " ", "extremaLocations"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"chord", "=", 
        RowBox[{"getChord", "[", "finalCamberLine", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"downsampledCamberLine", "=", 
        RowBox[{"resampleCamberLine", "[", 
         RowBox[{
         "finalCamberLine", ",", " ", "camberSplineOrder", ",", 
          "camberSamplingPoints"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"chord", ",", " ", "downsampledCamberLine"}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.837681205853385*^9, 3.837681253362399*^9}, {
  3.8376813511306877`*^9, 3.8376814366360703`*^9}, {3.8376816015244007`*^9, 
  3.837681641129362*^9}, {3.8376817097465763`*^9, 3.8376817462368374`*^9}, {
  3.837681812818446*^9, 3.8376821248242517`*^9}, {3.837682168015204*^9, 
  3.8376823016614647`*^9}, {3.8376823450456233`*^9, 3.837682350832862*^9}, {
  3.8376832254693975`*^9, 3.8376832340590796`*^9}},
 CellLabel->
  "(Debug) In[21]:=",ExpressionUUID->"13cd26c2-a567-4352-912b-e4557192a574"],

Cell[BoxData[
 RowBox[{
  RowBox[{"analyseShapesInImage", "[", "image_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "shapes", ",", " ", "canvas", ",", "lx", ",", "ly", ",", "i", ",", 
      "shape", ",", "transform", ",", "chord", ",", "camberLine"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"shapes", "=", 
      RowBox[{"ComponentMeasurements", "[", 
       RowBox[{"image", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Shape\>\"", ",", "\"\<BoundingBox\>\""}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"canvas", "=", "image"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"lx", ",", "ly"}], "}"}], "=", 
      RowBox[{"ImageDimensions", "@", "canvas"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "<=", 
        RowBox[{"Length", "@", "shapes"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"shape", "=", 
         RowBox[{"shapes", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"transform", "[", "pts_", "]"}], ":=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "+", 
             RowBox[{"shape", "[", 
              RowBox[{"[", 
               RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "&"}], ",", "pts"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"chord", ",", "camberLine"}], "}"}], "=", 
         RowBox[{"Map", "[", 
          RowBox[{"transform", ",", 
           RowBox[{"analyseShape", "[", 
            RowBox[{"shape", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"canvas", "=", 
         RowBox[{"ImageCompose", "[", "\[IndentingNewLine]", 
          RowBox[{"canvas", ",", "\[IndentingNewLine]", 
           RowBox[{"ListLinePlot", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"camberLine", ",", "chord"}], "}"}], ",", " ", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "lx"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "ly"}], "}"}]}], "}"}]}], ",", " ", 
             RowBox[{"ImageSize", "\[Rule]", "lx"}], ",", 
             RowBox[{"AspectRatio", "\[Rule]", 
              RowBox[{"ly", "/", "lx"}]}], ",", 
             RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}]}], 
          "\[IndentingNewLine]", "]"}]}], ";"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", "canvas"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8376835506274834`*^9, 3.8376836956375947`*^9}, {
   3.837683826660857*^9, 3.8376839955522585`*^9}, {3.8376841393151865`*^9, 
   3.8376842836045237`*^9}, {3.837684341058047*^9, 3.8376843704185452`*^9}, 
   3.8376844458264294`*^9, 3.8376845012532663`*^9, {3.837684746220233*^9, 
   3.837684826648032*^9}, {3.8376848649949255`*^9, 3.837684867283826*^9}, {
   3.8376850041626434`*^9, 3.8376850238311167`*^9}, {3.8376851365640917`*^9, 
   3.837685267051203*^9}, {3.8376855615203238`*^9, 3.8376856027676115`*^9}, 
   3.8376857417339225`*^9, {3.837686175471281*^9, 3.837686223819821*^9}, {
   3.837686269032234*^9, 3.8376863449745274`*^9}, {3.8376863800087967`*^9, 
   3.8376864306866913`*^9}, {3.8376865228720446`*^9, 
   3.8376867039167147`*^9}, {3.8376872291414843`*^9, 
   3.8376874480392046`*^9}, {3.8376874986210938`*^9, 3.837687536609182*^9}, {
   3.8376875816040955`*^9, 3.8376875867850027`*^9}, {3.8376876603245516`*^9, 
   3.837687815456874*^9}},
 CellLabel->
  "(Debug) In[30]:=",ExpressionUUID->"d0acdd9a-11d7-4846-900b-59b225426eca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"analyseShapesInImage", "[", "testImage", "]"}]], "Input",
 CellChangeTimes->{{3.837760649666131*^9, 3.837760656445422*^9}},
 CellLabel->
  "(Debug) In[33]:=",ExpressionUUID->"7fb54e84-496b-485c-947a-49cea246535d"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs2TFKA0EAheFBRa3EK3gLW0tbxQMkGINNhEQQWy+uURtBosbdzdvZ/X74
AkkVZl43Z9OHq7u9UsrqeP1xNXm6WC4nz9en6y83i9X9fDG7vVw8zuaz5fl0
f/3jyVEpL4elHJSPXgEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
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
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/P3v281pWedwBfZJNF
Nwm0i2SRTdo/IaWb8aKbbLIo3XkRmnUhGUO9zRCI6UAClgOhWAQ8NAW3GVsW
1Mki4Mo2waIwtgTFrkVBQ+QxGElIjI28mCxu8xznyLIsWfdenfM+55z7+cIH
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
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
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
JW8mez8AAAAAAACaJjogAAAAAABguGYx2WsOAAAAAABQyiwke40BAAAAAAAy
DS3Z6wkAAAAAANA1fU722gEAAAAAAPRFl5O9NgAAAAAAAEORnezvDwAAAAAA
MGv0PQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAADA/7cPByQAAAAAgv6/bkgKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqquppIvv2oA==
    "], {{0, 1806.}, {1666., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{1278.5, Automatic},
  ImageSizeRaw->{1666., 1806.},
  PlotRange->{{0, 1666.}, {0, 1806.}}]], "Output",
 CellChangeTimes->{{3.837760672168863*^9, 3.837760692388502*^9}},
 CellLabel->
  "(Debug) Out[33]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
PBJJRBaWlHoIRnyoE2WvIa8rywKenz17pkwFeCWgbZG1Q1IBo7Aajyap6NGj
BxiiylSEJPABFVkEpCwOHz5MR6juWH7q1Km0Rprj38GzO2Dt/zbkM6clfk5P
T1eb+2dfZyWxWWA/Ojk5QTnSHp+ZXw7W0Lu0IlpD+/fvp+/1YOTt7OyUqagU
1uy5gj0ykoqHDx+q8bCngkSrDR48mLaLVkzrBDf/bUgaTZVYLKZGOJknmjdv
HvVGDPDv4CHsuuwTnpRLawiy1Lx5c1Ue9lX0kWqts6XS1gi79+YdTQUM5PQ9
MvcSEBBA2xFeT+NCqYGvnZFbTlPR2IgAEkXYv3//mJgYFFhLUnHnVTy0eblC
QcsGfgHtitq8EZYHlnqpAO/oyPVANPKQGjp16pTaavUe1lSQiEj4zJkzp7yc
yQuMJAdt/IvKhDRVzs7O8DsS7YPlweDx8vJCP+nh32trFWAO2DjH0hqCwfHY
sWOqPOxRIyRGdObMmWDdKesZPOZtlt7puWU0Vcp5JuKlAo67uzv6SRf/XlBS
BaMwWEdMOyksVONhTwVedOWBDj906BDUPgxpJHfg96409QxNraRlnl9Yys8t
3LPvILUTlfGBeGWX6xGWvu+qL1pBJvJgtYISUtVb7PE8OAqYBwq3b9++rq6u
kA2M20Yqqbl5916Qh52iOFpRHKcQJNVWfKzITfgQ5xsT6jl6+ECjHu31uJxm
jFeir69vaWlJK4i0cNDqVxyjaLqqq6sXLVqkyswerTQBPRhOmjTpFPM5c+as
XCquTb9b9vLnyEtDoiz7xV79NtN2XPaD4V5H2r/Y1/7lwS5Oe7vY7ux2c0u3
S2u6mC7rfOiPTvsXdDT+rcPa6e1WTWu7cHzrWd+3nDK0BUfnhwEGHN3BvfSM
Out2asPt2Jqrz2tGxkl9cwvLWuaTU1QF9kVUSh5tewKBAEx/1XSyx39hg2jM
xIkTZk4dN+XHIYMNDYb01Pm6p873fXWmDNWbOaLlwvGtlk1qs256292/dzi5
pNPFNV3uGHe/v737i0M9XY8Zep409DplGHDWKNy8T6RFH/ifoHNGPia93U8Y
vj7S680Rw2cHej7e09N2Vw/rDd2sN3Q1X9EFQPbObb/xl3bLJ7ddMa3tovGt
xw9uPmqgwbdG+kadeR1acVs312mpr9Ncr5mBbjNdLnIQYAAX10g4OjiH7pE5
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
YsHHq6icbUdYIpLz6JwhtYeLkrJtR1Um29OZi1evXkF3VcVhX0kkLF9//fXn
z5/regk6rXWbpXd2QQVlKfTZnvv8f8jXJzMKDU/QYmfBNgQ6x4d6kKTuK4WS
03dDoLPwC9AMdk1RYta9odWfXhFPv6SkZNasWaoo7OuukzEH+LZ0JZ1wFAmE
0Ff2X/XjFyJ/v8hvT4HLcnCQiWccEhKihqIJB3xPb6MhOqWwtBpxWPvnltXU
lsZn3R8qyg2jXnHDXsK+Nk3uHSPb4JU6saC0GlrwkZshldWSMp9N+S7LSfrp
VToap5+gGxoaqo4VekVlwsM2AZZOKYWp7gUO34vyIkgLho565swZ1Zsn2Fft
CToY0atXrwazh1rEkPaDNkHm9tFpz/4q9dmiUMhIm7K3t1d7nx0d27goikbV
4zHIL6k+dDPijPmFTNuxNYUx8F1hYSGaqqJvsccw4At3VE5cJOVRIBAdvxXo
dG5GZcQp+CI4OJSRv8eKNh2jQebrjfI5AqnDQ+uiJ6Oyk7xH/DCWoxnWDIwF
RpwqFrdGXJXjueOvycr7w+6zosxkyky1NYEVkLl4wZzW+hwNUcjNfKNHjyaL
m0pbQs2jZI90wV0Z3aBHz9Ako0h1dbWXlxfqIowceyzObPSAzpogBzqA+0/0
no2NDbq2TkWSPV4IG1j64ILMwp8lS5aAvoHEoHVyLnzByDmwoszHeerWrVuP
Hj1Uv2eP21L9p5XSSmmltFJaKa2UVkorpZXSSmmltFJaKa2UVkorpZXSSmml
tFJaKa2UVkorpZXSSmmltFJaKa2UVkorpZX6MilT9IBu5OuEPzo6Oswv7Hev
4I1NvIEDB07DnydPnuig62h0bWxspjEfFK7KyO9iRTuJHtDObBp3TKLsHB0d
jx49ig5/YuTYb7E6gVGGDh1KY/lwdCM6+cnFxWXIkCEtWrRgJNnvjDuOcQYP
HkxxcOwqr6SkJCcnx9TUFJKJ9mq2RFf70Dd+YMU7xqSLXKDK7B+VSvfu3Ysi
f/AOc97GjRu34I+VlRVJ+bVr18g3aD8wxRrOyoSj6bmDBg+ht1uSKHvIhq2t
LaSc3kk7efJkeEax4SSq6s2bN/D8888/1+F8y8pCbsZo1Zy7acNqBIB38PBS
U1MhC9AiOnbsiO/E0u3bty883r9/H34SCAT07CyoD3gGQviNQfyalQ+f3MHT
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
wzmWFYWsYMMHDBihUMjB09Hc5OTk/v37q8qNY0XBa+08QDEyMnJ1dc3Pz99N
dGx5Obg9AwYMqKcj/yu2YezYsdeuXYNscXYwKGqz+BNZUUgcydKlSyEpCGAr
sZgrKtDBcCpyP7Gi4HgXdG/ioEGDwIb48OEDnuRDO4nBFO3Xr1+99v4fsT88
6A3wlr29fWJi4hqm/1tZWaElI9U2+h9RUFyoFmNjY3TOxAqm7cEzOphGtY3+
R6QWD7ywUaNG3b59G17Hs/080NnQpgEKOYJUdgYr0lImX7169Xrx4kVubi5e
z9MVi8VQ7tA5u3btqtoOf2FFI/F7MDydOYPVI1kPvnHjxoIFC1TlZrOirMAo
P/30E5QsAiDrT1Dz0C2m4w8j+T9WnJUYB/JmYWHx7t07EmnEi46OPnDgAJge
yNhTaSX/EbXOg+8v4Q8UDYnmj42NNTMzU637Baw4ZL8J2GTnzp2DwZjuhiou
Ll6+fDnaHMjILWRFwYMND1ru48ePoUCgWMYxOgMqHplujORiVhyyG3PWrFn3
7993cXGheyPB+lM7B2cJKwrZjwwfGAXR7h68l5YHQyc4lPBVt27dGMm/WHHw
Hnoe1Mrw4cM3b96clZX1LU4P2HtqZ+csZ8XB3jJPX1///PnzoIvBhiN7/NPS
0uARHQWm2jr+HQcv+6PdjseOHUNxcv2Z8erQoUMoQapt499RsE+tO2bMmMmT
J0PvKi0tRfcD43NrdOEBmuJk/EELFsw7a1kRyflk4NeABBr0dFB4oYoPRu5N
BiXgjz/btm0DwVatWqm2nn9HJ+dIQls8jz8cHfSHS5bosKlFbPuamnq/U3NU
rW39Ows2a1D83lz84RigP8jiVpPbzoqi+k8rpZXSSmmltFJaKa2UVkorpZXS
SmmltFJaKa2UVkorpZXSSmmltFJaKa2UVkorpZXSSmmltFJaKa2UVkorpZXS
SmmltFJaKa2UVkorpZXSSmmltFJaKa2UVkorpZXSSmmltFJaKa2UVkorpZXS
SmmltFJaKa2UVkorpZXSSjVeCp0sxCJFbkZBdxi2xx9OLfxR/9cMfkbC/w9u
pca7\
\>", "ImageResolution" -> \
72.],ExpressionUUID->"3730ccb4-a60c-45b4-af23-7b0ba6145669"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "directory", "=", 
   "\"\<C:\\\\Users\\\\User\\\\Documents\\\\Zvejnieks\\\\Bubble_Shape_\
Analysis\\\\megumi_test_cases_traced_v2\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"set", "=", "\"\<4x\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fileNames", "=", 
   RowBox[{"FileNames", "[", 
    RowBox[{
    "directory", "<>", "\"\<\\\\\>\"", "<>", "set", "<>", 
     "\"\<\\\\**.png\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"images", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"Import", ",", "fileNames"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8376879961803465`*^9, 3.837688120308482*^9}, {
   3.837688160439927*^9, 3.8376882850467973`*^9}, {3.8376883559214005`*^9, 
   3.8376883840621033`*^9}, 3.837688512247515*^9, {3.837688555120376*^9, 
   3.8376885596425004`*^9}, 3.837694346588564*^9, 3.837699237112515*^9},
 CellLabel->
  "(Debug) In[33]:=",ExpressionUUID->"f600c2e3-c391-42c9-8dc5-9670781750a2"],

Cell[BoxData[
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", 
      RowBox[{"Length", "@", "fileNames"}]}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"analysedImage", "=", 
       RowBox[{"analyseShapesInImage", "[", 
        RowBox[{"images", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"fileName", "=", 
       RowBox[{"Last", "@", " ", 
        RowBox[{"FileNameSplit", "[", 
         RowBox[{"fileNames", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{
        "directory", "<>", "\"\<\\\\Analysed \>\"", "<>", "set", "<>", 
         "\"\<\\\\\>\"", "<>", "fileName"}], ",", "analysedImage"}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
   RowBox[{"Row", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ProgressIndicator", "[", 
        RowBox[{"i", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"Length", "@", "fileNames"}]}], "}"}]}], "]"}], ",", "i"}],
       "}"}], ",", "\"\< \>\""}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.837688391254111*^9, 3.837688423774779*^9}, {
  3.8376886991438427`*^9, 3.8376887368303423`*^9}},
 CellLabel->
  "(Debug) In[37]:=",ExpressionUUID->"519dbee1-817c-4db4-986d-3f3477cdf65f"]
},
WindowSize->{1920, 997},
WindowMargins->{{-1928, Automatic}, {Automatic, -8}},
CellContext->Notebook,
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 9, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"806f46c6-b435-4593-8a14-384369f740de"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 2297, 61, 572, "Input",ExpressionUUID->"7c516287-0fd3-45e9-9ec6-df31805335ea",
 InitializationCell->True],
Cell[2880, 85, 368, 6, 46, "Output",ExpressionUUID->"0b5b9cd3-2c7e-4cd7-aba3-277afe6c9f48"]
}, Open  ]],
Cell[3263, 94, 8895, 151, 127, "Input",ExpressionUUID->"042b13bb-9ed0-4d8e-a53d-3cf7445b4854"],
Cell[12161, 247, 5279, 111, 708, "Input",ExpressionUUID->"13cd26c2-a567-4352-912b-e4557192a574"],
Cell[17443, 360, 4002, 90, 309, "Input",ExpressionUUID->"d0acdd9a-11d7-4846-900b-59b225426eca"],
Cell[CellGroupData[{
Cell[21470, 454, 237, 4, 42, "Input",ExpressionUUID->"7fb54e84-496b-485c-947a-49cea246535d"],
Cell[21710, 460, 54114, 893, 1417, 30811, 509, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"3730ccb4-a60c-45b4-af23-7b0ba6145669"]
}, Open  ]],
Cell[75839, 1356, 990, 23, 86, "Input",ExpressionUUID->"f600c2e3-c391-42c9-8dc5-9670781750a2"],
Cell[76832, 1381, 1501, 39, 105, "Input",ExpressionUUID->"519dbee1-817c-4db4-986d-3f3477cdf65f"]
}
]
*)

